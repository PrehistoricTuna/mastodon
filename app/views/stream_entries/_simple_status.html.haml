.status.light
  .status__header
    .status__meta
      = link_to TagManager.instance.url_for(status), class: 'status__time u-url u-uid', target: stream_link_target, rel: 'noopener' do
        %time.time-ago{ datetime: status.created_at.iso8601, title: l(status.created_at) }= l(status.created_at)
      %data.dt-published{ value: status.created_at.to_time.iso8601 }

    = link_to TagManager.instance.url_for(status.account), class: 'status__display-name p-author h-card', target: stream_link_target, rel: 'noopener' do
      .status__avatar
        %div
          = image_tag status.account.avatar(:original), width: 48, height: 48, alt: '', class: 'u-photo'
      %span.display-name
        %strong.p-name.emojify= display_name(status.account)
        %span= acct(status.account)

  .status__content.p-name.emojify<
    - if status.spoiler_text?
      %p{ style: 'margin-bottom: 0' }<
        %span.p-summary> #{status.spoiler_text}&nbsp;
        %a.status__content__spoiler-link{ href: '#' }= t('statuses.show_more')
    .e-content{ lang: status.language, style: "display: #{status.spoiler_text? ? 'none' : 'block'}; direction: #{rtl_status?(status) ? 'rtl' : 'ltr'}" }= Formatter.instance.format(status)

  - unless status.media_attachments.empty?
    .status__attachments
      = render partial: 'stream_entries/content_spoiler', locals: { sensitive: status.sensitive? }
      - if status.media_attachments.first.video?
        .status__attachments__inner
          .video-item
            = link_to (status.media_attachments.first.remote_url.blank? ? status.media_attachments.first.file.url(:original) : status.media_attachments.first.remote_url), style: "background-image: url(#{status.media_attachments.first.file.url(:small)})", target: '_blank', rel: 'noopener', class: 'u-video' do
              .video-item__play
                = fa_icon('play')
      - else
        .status__attachments__inner{ class: expand_media ? 'expand_media' : '' }
          - status.media_attachments.each do |media|
            = render partial: 'stream_entries/media', locals: { media: media, expand_media: expand_media }

  - pixiv_cards = status.pixiv_cards.select(&:image_url?)
  - if pixiv_cards.present?
    .status__attachments
      = render partial: 'stream_entries/content_spoiler', locals: { sensitive: status.sensitive? }
      - klass = 'expand_media' if expand_media

      - if pixiv_cards.size > 1 && pixiv_cards.size.odd?
        .status__attachments__inner.pixiv-twitter-card{ class: klass }
          - pixiv_card = pixiv_cards.shift
          .media-item
            - style = "background-image: url(#{pixiv_card.image_url})" unless expand_media
            = link_to pixiv_card.url, style: style, target: '_blank', rel: 'noopener', class: "u-photo" do
              - if expand_media
                %img{ src: pixiv_card.image_url, class: 'pixiv-twitter-card' }

      .status__attachments__inner.pixiv-twitter-card{ class: klass }
        - pixiv_cards.each do |pixiv_card|
          .media-item
            - style = "background-image: url(#{pixiv_card.image_url})" unless expand_media
            = link_to pixiv_card.url, style: style, target: '_blank', rel: 'noopener', class: "u-photo" do
              - if expand_media
                %img{ src: pixiv_card.image_url, class: 'pixiv-twitter-card' }
