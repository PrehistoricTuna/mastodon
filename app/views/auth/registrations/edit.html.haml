- content_for :page_title do
  = t('auth.change_password')

= simple_form_for(resource, as: resource_name, url: registration_path(resource_name), html: { method: :put, class: 'auth_edit' }) do |f|
  = render 'shared/error_messages', object: resource

  - if f.object.initial_password_usage
    %p.hint= t('auth.send_password_setting_url', email: f.object.email)
    .actions
      = f.button :button, t('auth.reset_password'), type: :submit

    %hr/

    %p.hint= t('auth.synchronize_email_address')
    .omniauth
      = render 'oauth/authorizations/pixiv_auth', auth_type: 'synchronize_email_address'
  - else
    = f.input :email, placeholder: t('simple_form.labels.defaults.email'), input_html: { 'aria-label' => t('simple_form.labels.defaults.email') }
    = f.input :password, placeholder: t('simple_form.labels.defaults.new_password'), input_html: { 'aria-label' => t('simple_form.labels.defaults.new_password'), :autocomplete => 'off' }
    = f.input :password_confirmation, placeholder: t('simple_form.labels.defaults.confirm_new_password'), input_html: { 'aria-label' => t('simple_form.labels.defaults.confirm_new_password'), :autocomplete => 'off' }
    = f.input :current_password, placeholder: t('simple_form.labels.defaults.current_password'), input_html: { 'aria-label' => t('simple_form.labels.defaults.current_password'), :autocomplete => 'off' }

    .actions
      = f.button :button, t('generic.save_changes'), type: :submit

%hr/

= render 'sessions'

- if open_deletion?
  %hr/

  %h6= t('auth.delete_account')
  - if current_user.initial_password_usage
    %p.muted-hint= t('deletes.exists_initial_password_usage')

  - elsif current_user.oauth_authentications.find_by(provider: :pixiv)
    %p.muted-hint= t('deletes.exists_oauth_authentications_html', path: settings_oauth_authentications_path)

  - else
    %p.muted-hint= t('auth.delete_account_html', path: settings_delete_path)
