version: 2
jobs:
  build:
    docker:
      - image: pawoo/circleci-primary:20170907
      - image: postgres:9.5.4
        environment:
          POSTGRES_USER: root
      - image: redis:3.2.4
      - image: docker.elastic.co/elasticsearch/elasticsearch:5.4.0
        environment:
          ES_JAVA_OPTS: -Xms1g -Xmx1g
        entrypoint:
          - /bin/sh
          - -c
          - >
            elasticsearch-plugin remove x-pack &&
            elasticsearch-plugin install analysis-kuromoji &&
            elasticsearch-plugin install analysis-icu &&
            elasticsearch

    environment:
      CONTINUOUS_INTEGRATION: true # for fuubar gem
      DB_HOST: 127.0.0.1
      ELASTICSEARCH_HOST: 127.0.0.1
      LOCAL_DOMAIN: cb6e6126.ngrok.io
      LOCAL_HTTPS: true
      PARALLEL_TEST_PROCESSORS: 2 # Set 2 explicitly or CircleCI container with 36 processors causes Errno::ENOMEM !
      PATH: /root/.rbenv/shims:/usr/local/node/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
      RAILS_ENV: test
    working_directory: /app
    parallelism: 2
    steps:
      - run:
          name: Check vm.max_map_count for elasticsearch container
          command: |
            vm_max_map_count=$(sysctl --values vm.max_map_count)
            if [ $vm_max_map_count -ge 262144 ]; then
              exit 0
            fi
            >&2 echo "Error: elasticsearch container requires vm.max_map_count >= 262144 but $vm_max_map_count now."
            >&2 echo "Please execute 'sudo sysctl --write vm.max_map_count=262144' to raise that value on your docker host."
            >&2 echo "See https://www.elastic.co/guide/en/elasticsearch/reference/5.4/docker.html#docker-cli-run-prod-mode"
            exit 1
      - run: cat /proc/cpuinfo
      - checkout
      - run: ./.circleci/primary/setup.sh
      - run: mkdir -p tmp/circleci/db
      - run: git merge-base $CIRCLE_SHA1 origin/master | tee tmp/circleci/master.hash

      # Bundler
      - restore_cache:
          key: bundler/{{ checksum ".ruby-version" }}.{{ checksum "Gemfile.lock" }}/3
      - run: bundle check || bundle install --without development production --retry=3 --path=vendor/bundle
      - run:
          command: ./bin/spring server
          background: true
      - run:
          name: Wake up spring [application_manager:test]
          command: sleep 1; ./bin/rails r "puts 'Hello!'"; ./bin/spring status
          background: true
      - save_cache:
          key: bundler/{{ checksum ".ruby-version" }}.{{ checksum "Gemfile.lock" }}/3
          paths:
            - vendor/bundle
            - .bundle/config

      # yarn
      - restore_cache:
          key: yarn/{{ checksum ".nvmrc" }}.{{ checksum "yarn.lock" }}/1
      - run: yarn install
      - save_cache:
          key: yarn/{{ checksum ".nvmrc" }}.{{ checksum "yarn.lock" }}/1
          paths:
            - node_modules

      # Start assets precompilation. It wastes about 60 seconds, so that runs on background.
      - restore_cache:
          key: assets/{{ checksum "tmp/circleci/master.hash" }}/3
      - run:
          command: |
            # `rake assets:precompile error_page:generate` causes curious error: https://circleci.com/gh/pixiv/pawoo/2274
            if ./bin/rake assets:precompile && ./bin/rake error_page:generate; then
              touch tmp/circleci/assets.success
            else
              touch tmp/circleci/assets.failure
              exit 1
            fi
          background: true

      # Database schema
      - restore_cache:
          key: db/{{ checksum "tmp/circleci/master.hash" }}/1
      - run:
          name: Wait for PostgreSQL container
          command: |
            for i in $(seq 60); do
              if nc -z $DB_HOST 5432; then
                exit 0
              fi
              sleep 0.5
            done
            exit 1
      - run:
          name: Create Database
          command: |
            sql=tmp/circleci/db/$(cat tmp/circleci/master.hash).$PARALLEL_TEST_PROCESSORS.sql
            if [ -f $sql ]; then
              psql -h $DB_HOST < $sql
            fi
            ./bin/rails parallel:create
          # pawoo_music_testが作られないので一時的に毎回作るように
      - run: ./bin/rails parallel:migrate
      - run: pg_dumpall --host=$DB_HOST --file=tmp/circleci/db/$(cat tmp/circleci/master.hash).$PARALLEL_TEST_PROCESSORS.sql
      - save_cache:
          key: db/{{ checksum "tmp/circleci/master.hash" }}/1
          paths:
            - tmp/circleci/db

      # Elasticsearch
      - run:
          name: Wait for Elasticsearch container
          command: |
            for i in $(seq 60); do
              if curl -fsv http://$ELASTICSEARCH_HOST:9200/_stats?pretty; then
                exit 0
              fi
              sleep 0.5;
            done
            exit 1
      - run: "./bin/rails runner 'Status.__elasticsearch__.create_index! force: true'"

      # Wait for assets precompilation
      - run:
          name: Wait for assets precompilation
          command: |
            for i in $(seq 240); do
              if [ -f tmp/circleci/assets.success ]; then
                exit 0
              elif [ -f tmp/circleci/assets.failure ]; then
                exit 1
              fi
              sleep 0.5;
            done
            exit 1

      # Run tests
      - run: bundle exec parallel_test --group-by filesize --type rspec -- --profile -- $(circleci tests glob 'spec/**/*_spec.rb' | circleci tests split --split-by=filesize)
      - run: if [ $CIRCLE_NODE_INDEX = 0 ]; then npm test; fi

      # Save compiled assets
      - save_cache:
          key: assets/{{ checksum "tmp/circleci/master.hash" }}/3
          paths:
            - public/assets
            - public/packs-test
            - tmp/cache/babel-loader

      - run: ./bin/spring stop
