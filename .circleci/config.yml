version: 2
jobs:
  build:
    docker:
      - image: pawoo/circleci-primary:20170907
      - image: postgres:9.5.4
        environment:
          POSTGRES_USER: root
      - image: redis:3.2.4

    environment:
      CONTINUOUS_INTEGRATION: true # for fuubar gem
      DB_HOST: 127.0.0.1
      LOCAL_DOMAIN: cb6e6126.ngrok.io
      LOCAL_HTTPS: true
      PARALLEL_TEST_PROCESSORS: 4
      PATH: /root/.rbenv/shims:/usr/local/node/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
      RAILS_ENV: test
    working_directory: /app
    parallelism: 1
    steps:
      - run: cat /proc/cpuinfo
      - checkout
      - run: ./.circleci/primary/setup.sh

      # Bundler
      - restore_cache:
          keys:
            - v1-ruby-dependencies-{{ checksum ".ruby-version" }}-{{ checksum "Gemfile.lock" }}
            - v1-ruby-dependencies-{{ checksum ".ruby-version" }}-
            - v1-ruby-dependencies-
      - run: bundle check || bundle install --without development production --retry=3 --path=vendor/bundle
      - run:
          command: ./bin/spring server
          background: true
      - run:
          name: Wake up spring [application_manager:test]
          command: sleep 1; ./bin/rails r "puts 'Hello!'"; ./bin/spring status
          background: true
      - save_cache:
          key: v1-ruby-dependencies-{{ checksum ".ruby-version" }}-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle
            - .bundle/config

      # yarn
      - restore_cache:
          keys:
            - v1-node-dependencies-{{ checksum ".nvmrc" }}-{{ checksum "yarn.lock" }}
            - v1-node-dependencies-{{ checksum ".nvmrc" }}-
            - v1-node-dependencies-
      - run: yarn install --frozen-lockfile
      - save_cache:
          key: v1-node-dependencies-{{ checksum ".nvmrc" }}-{{ checksum "yarn.lock" }}
          paths:
            - node_modules

      # Start assets precompilation. It wastes about 60 seconds, so that runs on background.
      - restore_cache:
          keys:
            - v1-precompiled-assets-{{ .Branch }}-{{ .Revision }}
            - v1-precompiled-assets-{{ .Branch }}-
            - v1-precompiled-assets-
      - run:
          command: |
            # `rake assets:precompile error_page:generate` causes curious error: https://circleci.com/gh/pixiv/pawoo/2274
            if ./bin/rake assets:precompile && ./bin/rake error_page:generate; then
              touch tmp/circleci/assets.success
            else
              touch tmp/circleci/assets.failure
              exit 1
            fi
          background: true

      # Database schema
      - run: mkdir -p tmp/circleci/db
      - run: echo $CIRCLE_SHA1 | tee tmp/circleci/HEAD.hash
      - run: git merge-base $CIRCLE_SHA1 origin/master | tee tmp/circleci/master.hash
      - restore_cache:
          key: db/{{ checksum "tmp/circleci/master.hash" }}/2
      - run:
          name: Wait for PostgreSQL container
          command: |
            for i in $(seq 60); do
              if nc -z $DB_HOST 5432; then
                exit 0
              fi
              sleep 0.5
            done
            exit 1
      - run:
          name: Create Database
          command: |
            sql=tmp/circleci/db/$(cat tmp/circleci/master.hash).$PARALLEL_TEST_PROCESSORS.sql
            if [ -f $sql ]; then
              psql -h $DB_HOST < $sql
            else
              ./bin/rails parallel:create
            fi
      - run: ./bin/rails parallel:migrate
      - run: pg_dumpall --host=$DB_HOST --file=tmp/circleci/db/$(cat tmp/circleci/HEAD.hash).$PARALLEL_TEST_PROCESSORS.sql
      - save_cache:
          key: db/{{ checksum "tmp/circleci/HEAD.hash" }}/2
          paths:
            - tmp/circleci/db

      # Run npm test
      - run: if [ $CIRCLE_NODE_INDEX = 0 ]; then npm test; fi

      # Wait for assets precompilation
      - run:
          name: Wait for assets precompilation
          command: |
            for i in $(seq 240); do
              if [ -f tmp/circleci/assets.success ]; then
                exit 0
              elif [ -f tmp/circleci/assets.failure ]; then
                exit 1
              fi
              sleep 0.5;
            done
            exit 1

      # Run rspec
      - run: bundle exec parallel_test --group-by filesize --type rspec -- --profile -- $(circleci tests glob 'spec/**/*_spec.rb' | circleci tests split --split-by=filesize)

      # Save compiled assets
      - save_cache:
          key: v1-precompiled-assets-{{ .Branch }}-{{ .Revision }}
          paths:
            - public/assets
            - tmp/cache

      - run: ./bin/spring stop
